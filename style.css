/* ==== GOOGLE FONTS ==== */
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;700&family=Montserrat:wght@400;600;700&display=swap');

/* ==== CSS VARIABLES ==== */
:root {
  /* Palette */
  --primary-color: #005c9e; /* A slightly adjusted blue from the original */
  --secondary-color: #f19e1f; /* Original orange/yellow accent */
  --accent-color: #e63946; /* A contrasting red for accents */
  --text-color: #333333;
  --text-light-color: #f8f9fa;
  --body-bg-color: #ffffff;
  --container-bg-color: #f8f9fa; /* Light gray for content backgrounds */
  --border-color: #dddddd;

  /* Typography */
  --font-family-base: 'Raleway', sans-serif;
  --font-family-heading: 'Montserrat', sans-serif;

  /* Spacing */
  --spacing-unit: 1rem; /* 16px if base font-size is 100% */
  --container-width: 1140px;
  --container-padding: 1.5rem;

  /* Borders */
  --border-radius: 0.25rem;
}

/* ==== RESET AND BASE STYLES ==== */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%; /* Typically 16px */
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-family-base);
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--body-bg-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.3s ease, background-color 0.3s ease;
}

a:hover {
  /* color: darken(var(--primary-color), 10%); */ /* SASS function replaced */
  filter: brightness(90%); /* CSS standard alternative */
  text-decoration: underline;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

ul, ol {
  list-style: none;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-family-heading);
  color: var(--primary-color);
  line-height: 1.3;
  margin-bottom: calc(var(--spacing-unit) * 0.75);
  font-weight: 600;
}

h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.25rem; }
h6 { font-size: 1rem; }

p {
  margin-bottom: var(--spacing-unit);
}

/* ==== UTILITY CLASSES ==== */
.container {
  width: 100%;
  max-width: var(--container-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
}

.text-center {
  text-align: center;
}

.hidden {
  display: none;
}

/* Screen reader text */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}


/* ==== HEADER STYLES ==== */
.site-header {
  background-color: #f8f9fa; /* Light background for the header */
  padding: calc(var(--spacing-unit) * 0.5) 0;
  border-bottom: 1px solid var(--border-color);
  position: relative;
  z-index: 1000;
}

.site-header .container {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing-unit) * 0.5);
}

.header-top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap; /* Allow wrapping for smaller screens */
  gap: var(--spacing-unit);
}

.logo-img {
  max-height: 60px; /* Adjust as needed */
  width: auto;
}

.google-translate-element-container {
  /* Styles for the container if needed, e.g., for alignment */
}

/* Basic styles for Google Translate and body to prevent issues */
.goog-te-banner-frame.skiptranslate {
    display: none !important;
}
body {
    top: 0px !important; /* Necessary to prevent Google Translate pushing body down */
    margin-top: 0 !important;
}


/* Main Navigation */
.main-navigation {
  width: 100%;
}

.menu-toggle {
  display: none; /* Hidden on desktop */
  background-color: var(--primary-color);
  color: var(--text-light-color);
  border: none;
  padding: calc(var(--spacing-unit) * 0.5) var(--spacing-unit);
  border-radius: var(--border-radius);
  cursor: pointer;
  font-family: var(--font-family-heading);
  font-size: 1rem;
}

.nav-menu,
.sub-menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.nav-menu {
  display: flex;
  justify-content: center; /* Center navigation items */
  flex-wrap: wrap; /* Allow wrapping on smaller screens */
  gap: calc(var(--spacing-unit) * 0.25);
}

.nav-menu li {
  position: relative; /* For dropdown positioning */
}

.nav-menu a {
  display: block;
  padding: calc(var(--spacing-unit) * 0.75) var(--spacing-unit);
  color: var(--primary-color);
  text-decoration: none;
  font-weight: 500; /* Raleway 500 */
  border-radius: var(--border-radius);
}

.nav-menu a:hover,
.nav-menu li.current-menu-item > a, /* Example for active link styling */
.nav-menu li.current-menu-parent > a {
  background-color: var(--primary-color);
  color: var(--text-light-color);
  text-decoration: none;
}

/* Sub Menus */
.sub-menu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  background-color: var(--body-bg-color);
  min-width: 220px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
  border-top: none;
  border-radius: 0 0 var(--border-radius) var(--border-radius);
  z-index: 1001; /* Ensure dropdowns are above other content */
}

.sub-menu .sub-menu { /* Third level */
  top: 0;
  left: 100%;
  border-top: 1px solid var(--border-color);
  border-radius: 0 var(--border-radius) var(--border-radius) var(--border-radius);
}

.nav-menu li:hover > .sub-menu,
.nav-menu li .sub-menu.open { /* Controlled by JS */
  display: block;
}

.sub-menu a {
  padding: calc(var(--spacing-unit) * 0.5) var(--spacing-unit);
  color: var(--text-color);
  font-weight: normal;
  white-space: nowrap;
}

.sub-menu a:hover {
  background-color: var(--primary-color);
  color: var(--text-light-color);
}

/* Dropdown Toggle Button (for JS control, especially mobile) */
.dropdown-toggle {
  display: none; /* Hidden by default on desktop, enabled by JS/CSS for mobile */
  background: none;
  border: none;
  color: inherit;
  padding: 0.5em;
  margin-left: 5px;
  cursor: pointer;
  font-size: 0.8em; /* Make it subtle */
}


/* ==== FOOTER STYLES ==== */
.site-footer {
  background-color: var(--primary-color); /* Dark background for footer */
  color: var(--text-light-color);
  padding: calc(var(--spacing-unit) * 2) 0;
  margin-top: calc(var(--spacing-unit) * 2); /* Space above footer */
}

.site-footer .container {
  /* Structure for footer content if needed */
}

.footer-content {
  display: flex;
  flex-wrap: wrap;
  gap: calc(var(--spacing-unit) * 2);
  justify-content: space-between;
}

.footer-column {
  flex: 1;
  min-width: 250px; /* Ensure columns don't get too squished */
}

.footer-column h4 {
  color: var(--text-light-color);
  font-size: 1.25rem;
  margin-bottom: var(--spacing-unit);
  border-bottom: 2px solid var(--secondary-color);
  padding-bottom: calc(var(--spacing-unit) * 0.5);
  display: inline-block;
}

.footer-column p,
.footer-column ul li {
  font-size: 0.95rem;
  margin-bottom: calc(var(--spacing-unit) * 0.5);
}

.footer-column a {
  color: var(--text-light-color);
}

.footer-column a:hover {
  color: var(--secondary-color);
  text-decoration: underline;
}

.footer-column .footer-logo-image {
  max-width: 150px; /* Adjust as needed */
  margin-top: var(--spacing-unit);
}

.footer-column .glyphicon { /* Assuming glyphicon are still used for icons */
  margin-right: calc(var(--spacing-unit) * 0.5);
  color: var(--secondary-color);
}

/* Copyright Section */
.copyright-section {
  background-color: darken(var(--primary-color), 5%);
  color: var(--text-light-color);
  padding: var(--spacing-unit) 0;
  text-align: center;
  font-size: 0.9rem;
}

.copyright-section p {
  margin-bottom: 0;
}


/* ==== RESPONSIVE STYLES ==== */

/* Tablet and smaller (example breakpoint, adjust as needed) */
@media (max-width: 992px) {
  .nav-menu {
    justify-content: flex-start; /* Align items to the left on smaller screens */
  }
}


/* Mobile specific styles */
@media (max-width: 768px) {
  .site-header .container {
    align-items: flex-start; /* Align logo/translate and nav container */
  }

  .header-top-bar {
    width: 100%; /* Ensure logo and translate take full width if needed */
  }

  .menu-toggle {
    display: block; /* Show hamburger menu */
    margin-bottom: var(--spacing-unit); /* Space below toggle */
  }

  .main-navigation {
    width: 100%;
  }

  .nav-menu {
    display: none; /* Hide menu by default */
    flex-direction: column;
    width: 100%;
    background-color: #fff; /* Give it a background when open */
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }

  .nav-menu.open {
    display: flex; /* Show when toggled */
  }

  .nav-menu li {
    width: 100%;
  }

  .nav-menu a {
    border-bottom: 1px solid var(--border-color);
  }
  .nav-menu li:last-child a {
    border-bottom: none;
  }

  .sub-menu {
    position: static; /* Submenus flow naturally in the document */
    box-shadow: none;
    border: none;
    border-top: 1px dashed var(--border-color); /* Differentiate submenus */
    background-color: #fdfdfd; /* Slightly different background for submenus */
    width: 100%;
    border-radius: 0;
  }

  .sub-menu a {
    padding-left: calc(var(--spacing-unit) * 1.5); /* Indent submenu items */
  }
  .sub-menu .sub-menu a {
    padding-left: calc(var(--spacing-unit) * 2); /* Indent third-level items */
  }

  .dropdown-toggle {
    display: inline-block; /* Show dropdown toggles for submenus */
    position: absolute;
    right: var(--spacing-unit);
    top: 50%;
    transform: translateY(-50%);
    color: var(--primary-color);
  }
  .nav-menu a:hover .dropdown-toggle,
  .nav-menu li.current-menu-item > a .dropdown-toggle {
    color: var(--text-light-color); /* Match link hover color */
  }


  .footer-content {
    flex-direction: column;
    gap: var(--spacing-unit);
  }
  .footer-column {
    min-width: 100%; /* Stack footer columns */
    text-align: center; /* Center text in footer columns on mobile */
  }
  .footer-column h4 {
    display: block; /* Make heading take full width */
    border-bottom: 2px solid var(--secondary-color);
  }
  .footer-column .footer-logo-image {
    margin-left: auto;
    margin-right: auto;
  }
}

/*
  The styles above this line represent the new, modernized CSS structure.
  Old styles that were previously below this line have been removed.
  This includes styles for old header, navigation, footer, sliders,
  product grids, and various other components specific to the old theme.
  Extensive media queries targeting those old structures have also been removed.

  The goal is to rely on the new CSS variable-driven and BEM-like approach
  for styling all components moving forward.
*/

/* Styles for .c_width if it's still used for some dropdowns and needs specific handling.
   This class was present in the old navigation for wider dropdowns.
   Ensure this doesn't conflict with new sub-menu styling if .c_width is on a .sub-menu. */
.nav-menu li > .sub-menu.c_width { /* Making selector more specific to a direct child submenu */
   min-width: 350px; /* Example: Adjust width for wider "mega-menu" style dropdowns */
   /* Potentially add other specific styles if this class denotes a unique dropdown type.
      For example, if it needs a different layout (e.g. multi-column using CSS grid/flex). */
}

/* Default input styling */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
textarea,
select {
  font-family: var(--font-family-base);
  font-size: 1rem;
  padding: calc(var(--spacing-unit) * 0.5) calc(var(--spacing-unit) * 0.75);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background-color: var(--body-bg-color);
  color: var(--text-color);
  transition: border-color 0.3s ease;
  width: 100%; /* Make form elements block-level by default */
  max-width: 100%; /* Ensure they don't overflow container */
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
textarea:focus,
select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 0.125rem rgba(var(--primary-color-rgb, 0, 92, 158), 0.25); /* Using RGB for box-shadow */
}

/* Define --primary-color-rgb if not already (example: for #005c9e) */
:root {
  --primary-color-rgb: 0, 92, 158;
}

/* General button styling */
.btn {
  display: inline-block;
  font-family: var(--font-family-heading);
  font-weight: 600;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 1px solid transparent;
  padding: calc(var(--spacing-unit) * 0.75) calc(var(--spacing-unit) * 1.5); /* Increased padding */
  font-size: 1rem;
  line-height: 1.5;
  border-radius: var(--border-radius);
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.btn-primary {
  color: var(--text-light-color);
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}
.btn-primary:hover {
  color: var(--text-light-color);
  background-color: hsl(from var(--primary-color) h s calc(l - 7%)); /* Darken using HSL */
  border-color: hsl(from var(--primary-color) h s calc(l - 10%));   /* Darken using HSL */
  text-decoration: none;
}

.btn-secondary {
  color: var(--text-light-color);
  background-color: var(--secondary-color);
  border-color: var(--secondary-color);
}
.btn-secondary:hover {
  color: var(--text-light-color);
  background-color: hsl(from var(--secondary-color) h s calc(l - 7%)); /* Darken using HSL */
  border-color: hsl(from var(--secondary-color) h s calc(l - 10%));   /* Darken using HSL */
  text-decoration: none;
}

/* Additional styles for common elements */
table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: var(--spacing-unit);
  font-size: 0.95rem;
}

table th,
table td {
  padding: calc(var(--spacing-unit) * 0.5) calc(var(--spacing-unit) * 0.75);
  text-align: left;
  border: 1px solid var(--border-color);
}

table th {
  font-family: var(--font-family-heading);
  font-weight: 600;
  background-color: var(--container-bg-color);
  color: var(--primary-color);
}

table tbody tr:nth-child(odd) td {
  background-color: var(--body-bg-color);
}
table tbody tr:nth-child(even) td {
  background-color: var(--container-bg-color);
}

table a {
  font-weight: 600;
}

blockquote {
  margin: var(--spacing-unit) 0;
  padding: var(--spacing-unit) calc(var(--spacing-unit) * 1.5);
  background-color: var(--container-bg-color);
  border-left: 5px solid var(--primary-color);
  font-style: italic;
  /* color: lighten(var(--text-color), 20%); */ /* SASS function replaced */
  color: hsl(from var(--text-color) h s calc(l + 15%)); /* CSS standard alternative, adjusted percentage slightly */
}

blockquote p:last-child {
  margin-bottom: 0;
}

/* Hamburger Icon for Menu Toggle */
.menu-toggle .icon-bar {
  display: block;
  width: 22px;
  height: 2px;
  background-color: var(--text-light-color);
  border-radius: 1px;
  margin: 4px auto;
  transition: background-color 0.3s ease;
}
.menu-toggle:hover .icon-bar {
  background-color: var(--secondary-color);
}

/* Clearfix utility if floats are used (though flex/grid is preferred) */
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

/* Styling for active menu item - assuming a class like 'current-menu-item' or 'active' is added by PHP/JS */
.nav-menu li.active > a,
.nav-menu li.current-menu-item > a {
  font-weight: 700; /* Montserrat 700 */
  background-color: var(--primary-color); /* Already there, but confirm */
  color: var(--text-light-color); /* Already there, but confirm */
}
.nav-menu li.active > .dropdown-toggle, /* Style toggle if item is active */
.nav-menu li.current-menu-item > .dropdown-toggle {
    color: var(--text-light-color);
}


/* Further refinement for sub-menu indicators (chevrons) if not using button toggles on desktop */
/* This is an example if .dropdown-toggle is not used for desktop hover indication */
.nav-menu > .menu-item-has-children > a {
  position: relative;
  padding-right: calc(var(--spacing-unit) * 2); /* Make space for arrow */
}

.nav-menu > .menu-item-has-children > a::after {
  content: '▼'; /* Simple text arrow, consider SVG or icon font */
  font-size: 0.7em;
  position: absolute;
  right: var(--spacing-unit);
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary-color);
  transition: transform 0.3s ease, color 0.3s ease;
}

.nav-menu > .menu-item-has-children > a:hover::after,
.nav-menu > .menu-item-has-children.active > a::after,
.nav-menu > .menu-item-has-children.current-menu-item > a::after {
  color: var(--text-light-color); /* Match link hover color */
}

.nav-menu > .menu-item-has-children:hover > a::after { /* Rotate arrow on hover/open */
   transform: translateY(-50%) rotate(180deg);
}

/* For sub-sub-menus, if using similar arrow indication */
.sub-menu > .menu-item-has-children > a::after {
  content: '▶'; /* Different arrow for side submenus */
  right: var(--spacing-unit);
  top: 50%;
  transform: translateY(-50%);
}
.sub-menu > .menu-item-has-children:hover > a::after {
   transform: translateY(-50%) rotate(0deg); /* No rotation needed or adjust as preferred */
}

/*
  Final check: Ensure no stray old CSS rules are left.
  The old file had many @media queries for specific components.
  Those should be gone if the components themselves are gone or restyled.
  The new responsive approach is mobile-first within component styles or in the global responsive section.
*/
